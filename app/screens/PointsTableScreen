import React, { useState, useEffect } from "react";
import { View, Text, TextInput, FlatList, TouchableOpacity, StyleSheet } from "react-native";
import { db } from "../config/firebase-config";
import { ref, onValue, update } from "firebase/database";

export default function PointsTableScreen({ route, navigation }) {
  const { tournamentId } = route.params;
  const [teams, setTeams] = useState([]);

  useEffect(() => {
    const refT = ref(db, `tournaments/${tournamentId}/pointsTable`);
    const unsubscribe = onValue(refT, (snapshot) => {
      if (snapshot.exists()) {
        const data = snapshot.val();
        setTeams(Object.entries(data).map(([id, t]) => ({ id, ...t })));
      }
    });
    return () => unsubscribe();
  }, [tournamentId]);

  const updateTeam = (id, key, value) => {
    const refT = ref(db, `tournaments/${tournamentId}/pointsTable/${id}`);
    update(refT, { [key]: value });
  };

  return (
    <View style={{ flex: 1, padding: 15 }}>
      <FlatList
        data={teams}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <View style={styles.row}>
            <Text style={{ flex: 1 }}>{item.teamName}</Text>
            {["played","won","lost","tied","nrr","points"].map((k) => (
              <TextInput
                key={k}
                style={styles.input}
                value={String(item[k] || 0)}
                keyboardType={k === "nrr" ? "decimal-pad" : "numeric"}
                onChangeText={(text) => updateTeam(item.id, k, k==="nrr"? parseFloat(text) : parseInt(text))}
              />
            ))}
          </View>
        )}
      />
    </View>
  );
}

const styles = StyleSheet.create({
  row: { flexDirection: "row", marginBottom: 10, alignItems: "center" },
  input: { width: 50, borderWidth: 1, borderColor: "#ccc", marginLeft: 5, padding: 5, borderRadius: 5, textAlign: "center" },
});
